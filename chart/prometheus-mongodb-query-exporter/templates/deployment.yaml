apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "prometheus-mongodb-query-exporter.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "prometheus-mongodb-query-exporter.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "prometheus-mongodb-query-exporter.chart" . }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "prometheus-mongodb-query-exporter.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- if .Values.podAnnotations }}
          {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "prometheus-mongodb-query-exporter.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ template "prometheus-mongodb-query-exporter.serviceAccountName" . }}
      containers:
      - name: mongodb-query-exporter
        envFrom:
        - secretRef:
            name: {{ include "prometheus-mongodb-query-exporter.secretName" . }}
        env:
        {{- if .Values.env }}
        {{- range $key, $value := .Values.env }}
          - name: "{{ $key }}"
            value: "{{ $value }}"
        {{- end }}
        {{- end }}
        {{- range $key, $value := .Values.extraEnvSecrets }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ required "Must specify secret!" $value.secret }}
                key: {{ required "Must specify key!" $value.key }}
          {{- end }}
        {{- if .Values.envFromSecret }}
        envFrom:
        - secretRef:
            name: {{ .Values.envFromSecret }}
        {{- end }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
        - --bind={{ printf ":%s" .Values.port }}
        {{- if .Values.extraArgs }}
        {{- toYaml .Values.extraArgs | nindent 8 }}
        {{- end }}
        ports:
        - name: metrics
          containerPort: {{ .Values.port }}
          protocol: TCP
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 10 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 10 }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        volumeMounts:
        - name: config
          mountPath: /etc/mongodb-query-exporter
        {{- range .Values.secretMounts }}
        - name: {{ .name }}
          mountPath: {{ .path }}
          {{- if .subPath }}
          subPath: {{ .subPath }}
          {{- end }}
        {{- end }}
      {{- if .Values.extraContainers }}
      {{- toYaml .Values.extraContainers | nindent 6 }}
      {{- end }}
      volumes:
      - name: config
        configMap:
          name: {{ include "prometheus-mongodb-query-exporter.configName" . }}
      {{- range .Values.secretMounts }}
      - name: {{ .name }}
        secret:
          secretName: {{ .secretName }}
      {{- end }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      terminationGracePeriodSeconds: 30
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
